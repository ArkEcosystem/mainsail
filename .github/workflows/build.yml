name: CI
env:
    DEBUG: napi:*
    APP_NAME: evm
    MACOSX_DEPLOYMENT_TARGET: "10.13"
permissions:
    contents: write
    id-token: write
"on":
    pull_request:
        types:
            - ready_for_review
            - synchronize
            - opened

jobs:
    build:
        strategy:
            fail-fast: false
            matrix:
                settings:
                    - host: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                      docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
                      build: rustup update stable && cargo --version && cd ./packages/evm && pnpm run build-napi --target x86_64-unknown-linux-gnu
                    - host: ubuntu-latest
                      target: aarch64-unknown-linux-gnu
                      docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
                      build: rustup update stable && cargo --version && cd ./packages/evm && pnpm run build-napi --target aarch64-unknown-linux-gnu

        name: stable - ${{ matrix.settings.target }} - node@20
        runs-on: ${{ matrix.settings.host }}

        steps:
            - uses: actions/checkout@v4

            - name: Setup node
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  run_install: false
                  version: latest

            - name: Install dependencies
              run: pnpm install

            - name: Build in docker
              uses: addnab/docker-run-action@v3
              if: ${{ matrix.settings.docker }}
              with:
                  image: ${{ matrix.settings.docker }}
                  options: "--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}:/build -w /build"
                  run: ${{ matrix.settings.build }}

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: bindings-${{ matrix.settings.target }}
                  path: ./packages/evm/${{ env.APP_NAME }}.*.node
                  if-no-files-found: error

    # publish:
    #     name: Publish
    #     runs-on: ubuntu-latest
    #     needs:
    #         - test-linux-x64-gnu-binding
    #         - test-linux-aarch64-gnu-binding
    #     steps:
    #         - uses: actions/checkout@v4
    #         - name: Setup node
    #           uses: actions/setup-node@v4
    #           with:
    #               node-version: 20
    #               cache: yarn
    #         - name: Install dependencies
    #           run: yarn install
    #         - name: Download all artifacts
    #           uses: actions/download-artifact@v4
    #           with:
    #               path: artifacts
    #         - name: Move artifacts
    #           run: yarn artifacts
    #         - name: List packages
    #           run: ls -R ./npm
    #           shell: bash
    #         - name: Publish
    #           run: |
    #               npm config set provenance true
    #               if git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$";
    #               then
    #                 echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
    #                 npm publish --access public
    #               elif git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+";
    #               then
    #                 echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
    #                 npm publish --tag next --access public
    #               else
    #                 echo "Not a release, skipping publish"
    #               fi
    #           env:
    #               GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #               NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
